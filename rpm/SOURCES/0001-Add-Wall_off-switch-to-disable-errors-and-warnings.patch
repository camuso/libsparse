From f934fe110d44fe4e294d543ad9f16dd00b73b0de Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Wed, 22 Jul 2020 13:09:17 -0400
Subject: [PATCH] Add Wall_off switch to disable errors and warnings

For sparse v0.6.2

Disable all error reporting. Useful when semantic parsing checks are
being done elsewhere or all you need is a tokenizer.

Signed-off-by: Tony Camuso <tcamuso@redhat.com>
---
 lib.c     | 18 +++++++++++++++---
 options.c | 15 +++++++++++++++
 options.h |  1 +
 3 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/lib.c b/lib.c
index dcbbb5b3..9d3911ca 100644
--- a/lib.c
+++ b/lib.c
@@ -127,6 +127,8 @@ static const char *show_stream_name(struct position pos)
 	return name;
 }
 
+static int show_info = 1;
+
 static void do_warn(const char *type, struct position pos, const char * fmt, va_list args)
 {
 	static char buffer[512];
@@ -135,6 +137,11 @@ static void do_warn(const char *type, struct position pos, const char * fmt, va_
 	if (pos.type == TOKEN_BAD)
 		return;
 
+	if (Wall_off) {
+		fmax_warnings = 0;
+		return;
+	}
+
 	vsprintf(buffer, fmt, args);	
 
 	fflush(stdout);
@@ -143,8 +150,6 @@ static void do_warn(const char *type, struct position pos, const char * fmt, va_
 		diag_prefix, type, buffer);
 }
 
-static int show_info = 1;
-
 void info(struct position pos, const char * fmt, ...)
 {
 	va_list args;
@@ -159,8 +164,15 @@ void info(struct position pos, const char * fmt, ...)
 static void do_error(struct position pos, const char * fmt, va_list args)
 {
 	static int errors = 0;
-        die_if_error = 1;
+
+	if (Wall_off) {
+		fmax_warnings = 0;
+		return;
+	}
+
+	die_if_error = 1;
 	show_info = 1;
+
 	/* Shut up warnings if position is bad_token.pos */
 	if (pos.type == TOKEN_BAD)
 		return;
diff --git a/options.c b/options.c
index a2e15bb7..9b2843ae 100644
--- a/options.c
+++ b/options.c
@@ -132,6 +132,7 @@ int Wuninitialized = 1;
 int Wuniversal_initializer = 0;
 int Wunknown_attribute = 0;
 int Wvla = 1;
+int Wall_off = 0;
 
 ////////////////////////////////////////////////////////////////////////////////
 // Helpers for option parsing
@@ -270,12 +271,24 @@ static int handle_switches(const char *ori, const char *opt, const struct flag *
 	return 0;
 }
 
+static const int warnings_size;
+
 static char **handle_onoff_switch(char *arg, char **next, const struct flag flags[])
 {
 	int flag = FLAG_ON;
 	char *p = arg + 1;
 	unsigned i;
 
+	/* This is a special case where we want to turn off all the
+	 * warning flags.
+	 */
+	if (!strcmp(p, "all_off")) {
+		for (i = 0; i < warnings_size; i++)
+			*flags[i].flag = FLAG_FORCE_OFF;
+		Wall_off = 1;
+		return NULL;
+	}
+
 	// Prefixes "no" and "no-" mean to turn warning off.
 	if (p[0] == 'n' && p[1] == 'o') {
 		p += 2;
@@ -866,6 +879,8 @@ static const struct flag warnings[] = {
 	{ }
 };
 
+static const int warnings_size = sizeof(warnings)/sizeof(struct flag);
+
 static char **handle_switch_W(char *arg, char **next)
 {
 	char ** ret = handle_onoff_switch(arg, next, warnings);
diff --git a/options.h b/options.h
index 070c0dd8..a95e1b52 100644
--- a/options.h
+++ b/options.h
@@ -131,6 +131,7 @@ extern int Wuninitialized;
 extern int Wuniversal_initializer;
 extern int Wunknown_attribute;
 extern int Wvla;
+extern int Wall_off;
 
 extern char **handle_switch(char *arg, char **next);
 extern void handle_switch_finalize(void);
-- 
2.18.1

