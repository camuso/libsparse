From 8e2d90459080fdaa538786fad257ff3e647d3b10 Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Thu, 16 May 2019 13:50:25 -0400
Subject: [PATCH] Add Wall_off switch to disable errors and warnings

Disable all error reporting. Useful when semantic parsing checks are
being done elsewhere or all you need is a tokenizer.

Signed-off-by: Tony Camuso <tcamuso@redhat.com>
---
 lib.c | 27 +++++++++++++++++++++++----
 lib.h |  1 +
 2 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/lib.c b/lib.c
index 83e6a1e..a84a8fc 100644
--- a/lib.c
+++ b/lib.c
@@ -126,6 +126,9 @@ unsigned int hexval(unsigned int c)
 	return retval;
 }
 
+unsigned int fmax_warnings = 100;
+static int show_info = 1;
+
 static void do_warn(const char *type, struct position pos, const char * fmt, va_list args)
 {
 	static char buffer[512];
@@ -135,6 +138,11 @@ static void do_warn(const char *type, struct position pos, const char * fmt, va_
 	if (pos.type == TOKEN_BAD)
 		return;
 
+	if (Wall_off) {
+		fmax_warnings = 0;
+		return;
+	}
+
 	vsprintf(buffer, fmt, args);	
 	name = stream_name(pos.stream);
 		
@@ -143,9 +151,6 @@ static void do_warn(const char *type, struct position pos, const char * fmt, va_
 		name, pos.line, pos.pos, diag_prefix, type, buffer);
 }
 
-unsigned int fmax_warnings = 100;
-static int show_info = 1;
-
 void info(struct position pos, const char * fmt, ...)
 {
 	va_list args;
@@ -160,7 +165,13 @@ void info(struct position pos, const char * fmt, ...)
 static void do_error(struct position pos, const char * fmt, va_list args)
 {
 	static int errors = 0;
-        die_if_error = 1;
+
+	if (Wall_off) {
+		fmax_warnings = 0;
+		return;
+	}
+
+	die_if_error = 1;
 	show_info = 1;
 	/* Shut up warnings if position is bad_token.pos */
 	if (pos.type == TOKEN_BAD)
@@ -295,6 +306,7 @@ int Wundef = 0;
 int Wuninitialized = 1;
 int Wunknown_attribute = 0;
 int Wvla = 1;
+int Wall_off = 0;
 
 int dump_macro_defs = 0;
 int dump_macros_only = 0;
@@ -691,6 +703,13 @@ static char **handle_onoff_switch(char *arg, char **next, const struct flag warn
 	char *p = arg + 1;
 	unsigned i;
 
+	if (!strcmp(p, "all_off")) {
+		for (i = 0; i < n; i++)
+			*warnings[i].flag = WARNING_FORCE_OFF;
+		Wall_off = 1;
+		return NULL;
+	}
+
 	if (!strcmp(p, "sparse-all")) {
 		for (i = 0; i < n; i++) {
 			if (*warnings[i].flag != WARNING_FORCE_OFF && warnings[i].flag != &Wsparse_error)
diff --git a/lib.h b/lib.h
index 322408b..acadf77 100644
--- a/lib.h
+++ b/lib.h
@@ -181,6 +181,7 @@ extern int Wundef;
 extern int Wuninitialized;
 extern int Wunknown_attribute;
 extern int Wvla;
+extern int Wall_off;
 
 extern int dump_macro_defs;
 extern int dump_macros_only;
-- 
2.18.1

